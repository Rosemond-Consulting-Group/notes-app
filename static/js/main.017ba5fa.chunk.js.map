{"version":3,"sources":["components/Note.js","components/Header.js","components/Footer.js","components/Board.js","reportWebVitals.js","index.js"],"names":["Note","props","_useState","useState","note","title","_useState2","Object","slicedToArray","setTitle","_useState3","body","_useState4","setBody","_useState5","_useState6","editMode","setEditMode","react_default","a","createElement","className","onChange","e","target","value","name","defaultValue","onClick","saveHandler","id","deleteHandler","Header","Footer","Board","notes","setNotes","deleteNote","filter","saveNote","updatedNotes","map","objectSpread","components_Header","components_Note","key","updatedNote","Date","now","concat","toConsumableArray","components_Footer","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","components_Board"],"mappings":"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","file":"static/js/main.017ba5fa.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport '../css/Note.css';\n\nconst Note = (props) => {\n  const [title, setTitle] = useState(props.note.title);\n  const [body, setBody] = useState(props.note.body);\n  const [editMode, setEditMode] = useState(false);\n\n  const handleSave = () => {\n    props.saveHandler(props.note.id,title, body)\n    setTitle(title);\n    setBody(body);\n    setEditMode(false);\n  }\n\n  return (\n   \t <div className='col-sm-6'>\n    \t<div className=\"card card-view\">\n        {\n          //use ternary operator to replace use of JS before the return\n          editMode ?\n            (\n              <div className=\"card-body\">\n                <textarea onChange={e => setTitle(e.target.value)} name=\"title\" className=\"title-textarea\" defaultValue={title}></textarea>\n                <textarea onChange={e => setBody(e.target.value)} name=\"body\" className=\"body-textarea\" defaultValue={body}></textarea>\n                <div><button className=\"btn btn-primary\" onClick={handleSave}>Save</button></div>\n              </div>\n            )\n            :\n            (\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{title}</h5>\n                <p>{body}</p>\n                <div>\n                  <button className=\"btn btn-info\" onClick={e => setEditMode(true)}>Edit</button><button className=\"btn btn-danger\" onClick={()=>props.deleteHandler(props.note.id)}>Delete</button>\n                </div>\n              </div>\n            )\n        }\n  \t\t</div>\n \t </div>\n  );\n\n}\n\n\nexport default Note;","import React from 'react';\n\nconst Header = () => {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n      <div className=\"container\">\n        <h1 className=\"mb-3\">Notes App</h1>\n      </div>\n    </div>\n  )\n};\n\nexport default Header;","import React from 'react';\n\nconst Footer = () => {\n  return (\n   <p>Copyright @ 2022</p>\n  )\n};\n\nexport default Footer;","import React, {useState} from 'react';\nimport '../css/Board.css';\nimport Note from './Note';\nimport Header from './Header';\nimport Footer from './Footer';\n\n\nconst Board = () => {\n  const [notes, setNotes] = useState([]);\n\n  //use the spread(...) operator to add the new note to the end of the array\n  const addNote = () => {\n    let updatedNote =\n    {\n      id: Date.now(),\n      title: \"New Note Title\",\n      body: \"New Note body\"\n    };\n\n    setNotes([...notes, updatedNote] );\n  }\n\n  //deleteNote filter out the note that matches the id passed in\n  const deleteNote = (id) => {\n    setNotes( notes.filter(note => note.id !== id ));\n  }\n\n  // saveNote is used to update notes state with current values\n  // from editing in Note.js, use the spread(...) operator \n  // tio set note then pass in updated fields\n  const saveNote = (id, title, body) => {\n    //disable eslint check so that warning is eliminated in the terminal\n    // eslint-disable-next-line\n    const updatedNotes = notes.map((note) => {\n      if (id === note.id) {\n        return {...note, title, body } \n      }\n    });\n\n    setNotes( updatedNotes );\n  }\n\n  return (\n    <div>\n        <Header />\n        <div className=\"div-board\">\n          <div className=\"row\">\n          {notes.map((note) => {\n            return <Note key={note.id} note={note} deleteHandler={deleteNote} saveHandler={saveNote} />\n            })}\n          </div>\n        </div>\n        <div>\n          <button className=\"btn btn-success add-button\" onClick={addNote}>Add</button>\n      </div>\n      <Footer />\n      </div>\n  );\n\n}\n\nexport default Board;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport Board from './components/Board';\n\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n\n  <React.StrictMode>\n    <Board />\n  </React.StrictMode>\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}